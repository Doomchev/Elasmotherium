variable {
  value.resolve(this);
  switch(this) {
    case Int:
      I64VarEquate;
  }
}

if {
  condition.resolve(Bool);
  IfFalseGoTo(#else);
  process(code);
  GoTo(#end);
  #else:
  process(else);
  #end:
}

do {
  #start:
  process(code);
  GoTo(#start);
}

link.resolve {
  getFromScope;
  this.resolve(parent);
}

variable.resolve {
  switch(this) {
    case Int:
      I64VarPush;
    case String:
      StringVarPush;
  }
  convert;
}

const.resolve {
  switch(parent) {
    case Int:
      I64Push;
    case String:
      StringPush;
  }
}

addition.resolve {
	v0.resolve(parent);
	v1.resolve(parent);
  switch(parent) {
    case Int:
      I64Add;
    case String:
      StringAdd;
  }
}

equal.resolve {
  v0.resolve();
  v1.resolve();
  I64IsEqual;
}

less.resolve {
  v0.resolve(Int);
  v1.resolve(Int);
  I64IsLess;
}

more.resolve {
  v0.resolve(Int);
  v1.resolve(Int);
  I64IsMore;
}