импортировано Изображение;
импортирована КлеточнаяКарта;

перечисление Цвет {
	Целый рядПешек, направление;
	создать(этого.рядПешек, этого.направление);
	белый(1, 1),
	чёрный(6, -1)
}

перечисление ТипФигуры {
	добавитьХоды(Поле поле, Цвет цвет, Список<Полей> ходы);
	пешка {
		добавитьХоды(Целое x, Целое y, Список<Полей> ходы) {
			Цвет цвет = доски[x, y].цвет;
			если(!поле.добавитьХод(0, цвета.направление, да, нет))
				если(цвета.рядПешек == поле.y) поле.добавитьХод(0, 2 * цвета.направление), да, нет);
			для(Целого d = -1; d <= 1; d += 2) поле.добавитьХод(d, d * цвета.направление, нет, да);
	}
	конь {
		добавитьХоды(Поле поле, Список<Полей> ходы) {
			для(Целого x от 1 до 2)
				для(Целого dx = -1; dx <= 1; dx += 2)
					для(Целого dy = -1; dy <= 1; dy += 2)
						поле.добавитьХод(ходы, x * dx, (3 - x) * dy);
		}
	}
	слон {
		добавитьХоды(Поле поле, Список<Полей> ходы) {
			для(Целого dx = -1; dx <= 1; dx += 2)
				для(Целого dy = -1; dy <= 1; dy += 2) {
					для(Целого d от 1 до 7) {
						если(поле.добавитьХод(ходы, dx * d, dy * d)) прервать;
		}
	}
	ладья {
		добавитьХоды(Поле поле, Список<Полей> ходы) {
			для(Целого x от 0 до 1)
				для(Целого d = -1; d <= 1; d += 2)
					для(Целого q от 1 до 7) {
						если(поле.добавитьХод(ходы, x * d * q, (1 - x) * d * q)) прервать;
		}
	}
	ферзь {
		добавитьХоды(Поле поле, Список<Полей> ходы) {
			для(Целого dx от -1 до 1)
				для(Целого dy от -1 до 1)
					для(Целого d от 1 до 7)
						если(поле.добавитьХод(ходы, dx * d, dy * d)) прервать;
		}
	}
	король {
		добавитьХоды(Поле поле, Список<Полей> ходы) {
			для(Целого dx от -1 до 1)
				для(Целого dy от -1 до 1)
					поле.добавитьХод(ходы, dx, dy);
		}
	}
}

Цвет ктоХодит = белые;
КлеточнаяКарта<ТипФигуры> доска = КлеточнаяКарта(8, 8, );

структура Поле {
	Целые x, y;
	создать(этого.x, этого.y);
	
	Список<Полей> возможныеХоды(Поле поле) {
		Список<Полей> ходы = Список();
		Фигура фигура = доска[x, y];
		если(фигура == пусто || фигура.цвет != ктоХодит) вернуть ходы;
		фигура.тип.добавитьХоды(поле, фигура.цвет, ходы);
		вернуть ходы;
	}
	
	Вопрос добавитьХод(Список<Полей> ходы, Целое dx, Целое dy, Вопрос ходить = да, Вопрос взять = да) {
		// возвращает да, если на клетке стоит фигура или клетка находится за пределами доски
		если(!(0 <= x + dx < 8 && 0 <= y + dy < 8)) вернуть да;
		Фигура фигура = доска[x + dx, y + dy];
		если(фигура == пусто && !ходить) вернуть нет;
		если(фигура != пусто && (!рубить || фигуры.цвет == ктоХодит)) вернуть да;
		ходы += Поле(x + dx, y + dy);
		вернуть фигура != пусто;
	}
}

класс Фигура {
	Цвет цвет;
	ТипФигуры тип;
	создать(этого.цвет, этого.тип);
}

заполнитьРяд(Целое y, Цвет цвет, ТипФигуры тип) для(Целого х от 0 до 7) доска(х, y) = Фигура(цвет, тип);
заполнитьРяд(Целое y, Цвет цвет, Массив<ТипФигуры> тип) для(Целого х от 0 до 7) доска(х, y) = Фигура(цвет, тип[x]);

Массив<Фигур> ряд = [ладья, конь, слон, ферзь, король, слон, конь, ладья];
заполнитьРяд(0, чёрной, пешкой);
заполнитьРяд(1, чёрным, рядом);
заполнитьРяд(6, белым, рядом);
заполнитьРяд(7, белой, пешкой);