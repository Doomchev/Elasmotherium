импортировать Wsad
  импортировать Клавишу
    класс Клавиш[а]
  
  клавишаВверх = Клавиша("W")
  клавишаВниз = Клавиша("S")
  клавишаВправо = Клавиша("A")
  клавишаВлево = Клавиша("D")

импортировать Цвета
  импортировать Цвет
    класс Цвет[] расширяет Ц32
      Целый син[ий] -> 0x0000FF & значение
      синий(нов[ое]Значени[е]) -> (значение & 0xFFFFFF00) | новоеЗначение
      должен быть(0 <= синий <= 0xFF)
      
      Целый зелён[ый] -> 0x00FF00 & значение
      зелёный(нов[ое]Значени[е]) -> (значение & 0xFFFF00FF) | (новоеЗначение >> 8)
      должен быть(0 <= зелёный <= 0xFF)
      
      Целый красн[ый] -> 0xFF0000 & значение
      красный(нов[ое]Значени[е]) -> (значение & 0xFF00FFFF) | (новоеЗначение >> 16)
      должен быть(0 <= красный <= 0xFF)
      
      создать(из Строки строк[и])
        выбрать(из строки.длины)
          вариант 1
            значение = 0х111111 * из16в10(строка)
          вариант 2
            значение = 0х010101 * из16в10(строка)
          вариант 3
            синий = из16в10(из строки.символа(0))
            зелёный = из16в10(из строки.символа(1))
            красный = из16в10(из строки.символа(2))
          вариант 6
            синий = из16в10(из строки.части(от 0 ..< до 2 исключая)
            зелёный = из16в10(из строки.части(от 2 ..< до 4 исключая)
            красный = из16в10(из строки.части(от 4 ..< до 6 исключая)
        значение = значение | 0xFF000000
      
      статичный из16в10(Строка строк[а])
        значение = 0
        для(индекс[а] = от 0 ..< не доходя до строки.длины)
          код = строки.символ(по индексу)
          значение = значение * 0xF + если(код > "9" то код - "0" иначе код - "A")
        вернуть значение
        
  чёрн[ый] = новый Цвет("0")
  сер[ый] = новый Цвет("8")
  красн[ый] = новый Цвет("F00")
  зелён[ый] = новый Цвет("0F0")

импортировать КлеточнуюКарту
  класс Клеточн[ая]Карт[а]
    Целые размер[]Ряда, размер[]Столбца, ширин[а]Клетка, высот[а]Клетка
    неизменное Целое количеств[о]ТиповКлеток
    Массив<Целых> клетк[и]
    Массив<Изображений> изображени[я]
    должно быть клеток.количество == размерyРяда * размерСтолбца
    должен быть клеток.элемент < количестваТиповКлеток
    должно быть количествоТиповКлеток >= 1
    должно быть изображений.количество > ТиповКлеток >= 1

    создать(поле размер[]Ряда, "х" поле размер[]Столбца, "из" поля изображени[я], "заполненную" Целой клетк[ой] = 0)
      количеств[о]ТиповКлеток = изображений.количеству
      должен клетки.индекс < количестваТиповКлеток
      ширинаКлетка = изображения(клетки.индекс).ширина
      высотаКлетка = изображения(клетки.индекс).высота
      клетки = новый Массив(размерРяда * размерСтолбца, клеткой)
    
    Целая ширина -> ширинаКлетка * размерРяда
    Целая высота -> высотаКлетка * размерСтолбца
    
    рисовать(Целое x = 0, Целое y = 0)
      для(ряд[а] = от 0 ..< не доходя до размераСтолбца)
        для(столб[]ц[а] = от 0 ..< не доходя до размераРяда)
          изображение(клетки(столбец + ряд * размерРяда).индекс).рисовать(x + столбец * ширинаКлетка, y + ряд * высотаКлетка)
    
    ТипКлетки элемент(Целого столб[]ц[а], Целого ряд[а]) -> клетка(столбец + ряд * размерРяда)
    ТипКлетки элемент(Целого столб[]ц[а], Целого ряд[а], ТипКлетка значение) -> клетка(столбец + ряд * размерРяда) = значению
  
  
импортировать Окно
  импортировать ЭлементИнтерфейса

  класс Окно
    ЭлементИнтерфейса интерфейс

перечисление ЦветнаяКлетка<Цвет>
	стена: чёрная
	пол: серый
	еда: красная
	змейка: зелёная

// параметры

ширинаПоля = 64
высотаПоля = 48
длин[а]Змеи = 10
удлинен[ие] = 5

КлеточнаяКарта игровоеПоле
наборКлеток = ЦветныеКлетки<Клетка>()
Целые очк[и], x, y, dx, dy
Позиция первый, последний

// опции

старт = ПоЦентру.Кнопка("Старт") {

опции = Окно
	интерфейс = Столбец
    Таблица(2)
      Текст.Справа("Ширина поля: ")
      ТекстовоеПоле(ссылка ширинаПоля, 10 ..= 100)
      Текст.Справа("Высота поля: ")
      ТекстовоеПоле(ссылка высотаПоля, 10 ..= 100)
      Текст.Справа("Начальная длина: ")
      ТекстовоеПоле(ссылка еда, 1)
      Текст.Справа("Увеличение длины: ")
      ТекстовоеПоле(ссылка еды, 1)
      старт
// main


Позиция
	Позиция следующий
	создать(Целое поле x, Целое поле y)

  
Позиция первый, последний


старт.приНажатии() {
  опции.закрыть()
  
  игровоеПоле = КлеточнаяКарта<Клетка>(ширинаПоля, высотаПоля, наборКлеток, пол)
  для(x = от 0 ..< до шириныПоля исключая)
    игровоеПоле.клетка(x, 0) = игровоеПоле.клетка(x, высотаПоля - 1) = стена
  для(y = от 0 ..< до высотыПоля исключая)
    игровоеПоле.клетка(0, y) = игровоеПоле.клетка(ширинаПоля - 1, y) = стена
  создатьЕду()
  
  очки = 0, x = y = 2, dx = 1, dy = 0
  первый = новая Позиция(x, y)
  последний = новая Позиция(x, y)
  
  игра.открыть()


создатьЕду()
	повторять
		едыX = Целое.случайное(от 0 ..< до шириныПоля исключая)
		едыY = Целое.случайное(от 0 ..< до высотыПоля исключая)
		если(игровоеПоле(едыX, едыY) == пол)
			игровоеПоле(едыX, едыY) = еды
			прервать


игра = Скрытый.Холст.Окно("Змейка") {
	оверлей = Столбец
		ПоЦентру.Текст("Очки: %очки")
	кадровЛогикиВСекунду = 6
	приНажатииКлавиши(клавиш[и])
		выбрать(клавишу)
			вариант upKey
        dx = -1, dy = 0
			вариант rightKey
        dx = 1, dy = 0
			вариант leftKey
        dx = 0, dy = -1
			вариант downKey
        dx = 0, dy = 1
	логика()
		последний.следующий = последний = Позиция(x, y)
		x += dx
		y += dy
		выбрать(игровоеПоле(x, y)) {
			вариант пол
			вариант еды
				еда += еды
				очки++
				создатьЕду()
			другие:
				игра.закрыть()
				играОкончена = Window("Конец игры!")
					оверлей = Столбец
						ПоЦентру.Текст("Вы набрали %очки очков.")
            ПоЦентру.Кнопка("OK")
              приНажатии()
                играОкончена.закрыть()
                игра.закрыть()
                опции.открыть()
		игровоеПоле(x, y) = змея
		если(еда > 0)
			еда--
		иначе
			игровоеПоле(первый.x, первый.y) = пол
			первый = первый.следующий