import video.*
import gui.*

// Drawable

Drawable {
	get Int(0>..) width
	get Int(0>..) height
	draw(Int x, Int y) {}
}

// Texture

native Texture extends DrawableRectangle {
	(Int(0<..) width, Int(0<..) height) {}
	(String fileName) {}
	put(Int(0..<$width) x, Int(0..<$height) y, Color c) {}
	
	(width, height, Color function(Int x, Int y)) {
		this(width, height)
		for(y = 0 ..< height, x = 0 ..< width) $put(x, y, function(x, y))
	}
	draw(x = 0, y = 0, width = $width, height = $height, tx = 0, ty = 0, twidth = width, theight = height) {}
	map(width, height) {
		xQuantity = floor($width / width);
		yQuantity = floor($height / height);
		images = List(xQuantity * yQuantity)
		for(y = 0 ..< yQuantity; x = 0 ..< xQuantity) images[x + y * yQuantity] = Image(texture, x * width, y * height
				, width, height);
		return(images)
	}
}

// gui

Widget {
	Int(0..) x, y, width, height
	
}

ImageWidget {
	Image image
	
}

images = Texture.load("icons.png").map(16, 16)

folderTemplate = GUITemplate({
	List children
	String caption
	Image icon
	static Menu rightClickMenu
	
}, {
	parent
	Bool opened
}, Column {
	maximizeWidth: 1
	maximizeHeight: 1
	Row {
		maximizeWidth: 1
		onRightClick() {
			
		}
		ImageWidget {
			image: $opened ? images[0] : images[1]
			onClick() {
				!$opened
				$refresh()
			}
		}
		ImageWidget {
			image: $icon
		}
		TextWidget {
			maximizeWidth: 1
			text: $caption
		}
	}
	$opened?? Rows {
		list: $children
		template: Row {
			maximizeWidth: 1
			ImageWidget() {
				image: images[2]
			}
		}
	}
})

itemTemplate = Row {
	ImageWidget {
		image: $icon
	}
	TextWidget {
		maximizeWidth: 1
		text: $caption
	}
}

// main




root = Folder()

Layer {
	Texture texture
	String fileName
	
}

Window(Element {
	Element {
		width: 200
		
	}
	Element {
	}
})
